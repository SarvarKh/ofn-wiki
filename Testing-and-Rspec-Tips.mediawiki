Please add to this collection of tips and tutorials as you find them.

<h3>Conventions and Tips</h3>
<h5>Let</h5>
The "let" statements here are a particular syntax for defining data in rspec. For a description of how "let" statements work, see the RSpec docs here: https://www.relishapp.com/rspec/rspec-core/v/2-11/docs/helper-methods/let-and-let

<h5>Retry</h5>
Retries like here:
   feature "Cookies", js: true, retry: 3 do
should be a last resort when there is a good reason why we can't make the test deterministic. You should either remove the retry or add a comment explaining which part is failing (and why).

<h5>Sleep</h5>
We should avoid using `sleep` whenever possible. The RSpec `expect` syntax should until a condition is met by default.


<h3>Running Specs</h3>
bundle exec rake db:test:prepare..........to prepare the db<br>
rspec spec/path/to/spec.rb:#lineNum.......will run the tests from a specific line<br>

Finished in 4.55 seconds
1 example, 0 failures

This is a good start, but we don't know whether our test is actually telling us anything yet. For example, an empty test also passes. We want to know that when our code is broken, the test will fail, otherwise it's not an informative test. To gain that confidence, we deliberately break our code, then re-run the test, and it should fail.

<h3>Run some Specs with Selenium webdriver</h3>
For beginners, it may be useful to run specs with selenium and see the tests execute on a normal browser. You can also Debug things directly on the browser with this. This is how you can do it:
- add to GemFile:
  gem 'selenium-webdriver'
- run command to fetch the new gem:
  bundle

- install Firefox

- install geckodriver - https://github.com/mozilla/geckodriver/releases (make it available on your PATH)

- edit spec_helper.rb
  replace
  Capybara.javascript_driver = :poltergeist
  with
  Capybara.javascript_driver = :selenium

- You may have to replace some unavailable instructions for example:
  replace --  find("button", text: "Checkout as guest").trigger "click"
  with    --  find("button", text: "Checkout as guest").click  

- done!






